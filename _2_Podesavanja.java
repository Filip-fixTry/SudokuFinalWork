package zavrsnirad;

import java.awt.Cursor;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.LayoutStyle;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Filip Božović
 */
public class _2_Podesavanja extends javax.swing.JFrame {

    public static String tipSudoku;
    public static String nivo;
    public static boolean software = false;
    public static boolean greska;
    public static boolean pomocIgra;
    private JRadioButton databaseRadio;
    private JButton dugmeBack;
    private JButton dugme_6x6;
    private JButton dugme_9x9;
    private JRadioButton easyRadio;
    public static JRadioButton greskaRadio;
    private ButtonGroup grupaLevel;
    private ButtonGroup grupaSistem;
    private JRadioButton hardRadio;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JPanel jPanel4;
    private JRadioButton mediumRadio;
    public static JRadioButton pomocRadio;
    private JRadioButton softwareRadio;

    /**
     * Creates new form _2_Podesavanja
     */
    public _2_Podesavanja() {
        initComponents();
        greska = false;
        pomocIgra = false;
        setPozadina();
        podesiJezik();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        this.grupaLevel = new ButtonGroup();
		this.grupaSistem = new ButtonGroup();
		this.databaseRadio = new JRadioButton();
		this.jPanel1 = new JPanel();
		this.dugme_9x9 = new JButton();
		this.dugme_6x6 = new JButton();
		this.dugmeBack = new JButton();
		this.jPanel2 = new JPanel();
		this.easyRadio = new JRadioButton();
		this.mediumRadio = new JRadioButton();
		this.hardRadio = new JRadioButton();
		this.jPanel3 = new JPanel();
		this.softwareRadio = new JRadioButton();
		this.jPanel4 = new JPanel();
		greskaRadio = new JRadioButton();
		pomocRadio = new JRadioButton();
		this.grupaSistem.add(this.databaseRadio);
		this.databaseRadio.setFont(new Font("Buxton Sketch", 0, 18));
		this.databaseRadio.setText("Database");
		this.databaseRadio.setFocusable(false);
		this.databaseRadio.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent evt) {
				_2_Podesavanja.this.databaseRadioActionPerformed(evt);
			  }
			});
		setDefaultCloseOperation(3);
		setTitle("Podešavanja");
		setCursor(new Cursor(0));
		setResizable(false);
		this.dugme_9x9.setFont(_3_sudoku9x9.font6x6);
		this.dugme_9x9.setText("9 x 9");
		this.dugme_9x9.setFocusable(false);
		this.dugme_9x9.setHorizontalTextPosition(0);
		this.dugme_9x9.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent evt) {
				_2_Podesavanja.this.dugme_9x9ActionPerformed(evt);
			  }
			});
		this.dugme_6x6.setFont(_3_sudoku9x9.font6x6);
		this.dugme_6x6.setText("6 x 6 ");
		this.dugme_6x6.setFocusable(false);
		this.dugme_6x6.setHorizontalTextPosition(0);
		this.dugme_6x6.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent evt) {
				_2_Podesavanja.this.dugme_6x6ActionPerformed(evt);
			  }
			});
		this.dugmeBack.setFont(_3_sudoku9x9.fontNazad);
		this.dugmeBack.setText("Nazad");
		this.dugmeBack.setFocusable(false);
		this.dugmeBack.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent evt) {
				_2_Podesavanja.this.dugmeBackActionPerformed(evt);
			  }
			});
		this.jPanel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Nivo", 2, 0, new Font("Courier New", 0, 12)));
		this.grupaLevel.add(this.easyRadio);
		this.easyRadio.setFont(_3_sudoku9x9.fontNivoi);
		this.easyRadio.setSelected(true);
		this.easyRadio.setText("Laki");
		this.easyRadio.setFocusable(false);
		this.easyRadio.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent evt) {
				_2_Podesavanja.this.easyRadioActionPerformed(evt);
			  }
			});
		this.grupaLevel.add(this.mediumRadio);
		this.mediumRadio.setFont(_3_sudoku9x9.fontNivoi);
		this.mediumRadio.setText("Srednji");
		this.mediumRadio.setFocusable(false);
		this.mediumRadio.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent evt) {
				_2_Podesavanja.this.mediumRadioActionPerformed(evt);
			  }
			});
		this.grupaLevel.add(this.hardRadio);
		this.hardRadio.setFont(_3_sudoku9x9.fontNivoi);
		this.hardRadio.setText("Teški");
		this.hardRadio.setFocusable(false);
		this.hardRadio.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent evt) {
				_2_Podesavanja.this.hardRadioActionPerformed(evt);
			  }
			});
		GroupLayout jPanel2Layout = new GroupLayout(this.jPanel2);
		this.jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout
			.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addGroup(jPanel2Layout.createSequentialGroup()
			  .addContainerGap()
			  .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(this.mediumRadio)
				.addComponent(this.hardRadio)
				.addComponent(this.easyRadio))
			  .addContainerGap(-1, 32767)));
		jPanel2Layout.setVerticalGroup(jPanel2Layout
			.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addGroup(GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
			  .addContainerGap(-1, 32767)
			  .addComponent(this.easyRadio)
			  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
			  .addComponent(this.mediumRadio)
			  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
			  .addComponent(this.hardRadio)
			  .addContainerGap()));
		this.jPanel3.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Matrica", 2, 0, new Font("Courier New", 0, 12)));
		this.softwareRadio.setFont(_3_sudoku9x9.fontNivoi);
		this.softwareRadio.setText("Random");
		this.softwareRadio.setToolTipText("Sam generiše matricu ukoliko je štikliran.");
		this.softwareRadio.setFocusable(false);
		this.softwareRadio.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent evt) {
				_2_Podesavanja.this.softwareRadioActionPerformed(evt);
			  }
			});
		GroupLayout jPanel3Layout = new GroupLayout(this.jPanel3);
		this.jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout.setHorizontalGroup(jPanel3Layout
			.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addGroup(jPanel3Layout.createSequentialGroup()
			  .addContainerGap()
			  .addComponent(this.softwareRadio)
			  .addContainerGap(-1, 32767)));
		jPanel3Layout.setVerticalGroup(jPanel3Layout
			.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addComponent(this.softwareRadio));
		greskaRadio.setFont(_3_sudoku9x9.fontNivoi);
		greskaRadio.setText("Ograničenje grešaka");
		greskaRadio.setFocusable(false);
		greskaRadio.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent evt) {
				_2_Podesavanja.this.greskaRadioActionPerformed(evt);
			  }
			});
		pomocRadio.setFont(_3_sudoku9x9.fontNivoi);
		pomocRadio.setText("Pomoć u igri");
		pomocRadio.setFocusable(false);
		pomocRadio.addActionListener(new ActionListener() {
			  public void actionPerformed(ActionEvent evt) {
				_2_Podesavanja.this.pomocRadioActionPerformed(evt);
			  }
			});
		GroupLayout jPanel4Layout = new GroupLayout(this.jPanel4);
		this.jPanel4.setLayout(jPanel4Layout);
		jPanel4Layout.setHorizontalGroup(jPanel4Layout
			.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addGroup(jPanel4Layout.createSequentialGroup()
			  .addContainerGap()
			  .addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(greskaRadio)
				.addComponent(pomocRadio, -2, 125, -2))
			  .addContainerGap(-1, 32767)));
		jPanel4Layout.setVerticalGroup(jPanel4Layout
			.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addGroup(jPanel4Layout.createSequentialGroup()
			  .addContainerGap()
			  .addComponent(greskaRadio)
			  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
			  .addComponent(pomocRadio)
			  .addContainerGap(8, 32767)));
		GroupLayout jPanel1Layout = new GroupLayout(this.jPanel1);
		this.jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout
			.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addGroup(jPanel1Layout.createSequentialGroup()
			  .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
				  .addGap(31, 31, 31)
				  .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
					.addComponent(this.dugme_9x9, -2, 120, -2)
					.addComponent(this.dugme_6x6, -2, 120, -2)
					.addGroup(jPanel1Layout.createSequentialGroup()
					  .addGap(10, 10, 10)
					  .addComponent(this.jPanel3, -2, -1, -2)))
				  .addGap(18, 18, 32767))
				.addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
				  .addContainerGap(-1, 32767)
				  .addComponent(this.jPanel4, -2, -1, -2)
				  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)))
			  .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
				.addComponent(this.jPanel2, -1, -1, 32767)
				.addComponent(this.dugmeBack, -1, -1, 32767))
			  .addContainerGap()));
		jPanel1Layout.setVerticalGroup(jPanel1Layout
			.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addGroup(jPanel1Layout.createSequentialGroup()
			  .addGap(22, 22, 22)
			  .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
				.addGroup(jPanel1Layout.createSequentialGroup()
				  .addComponent(this.jPanel2, -1, -1, -2)
				  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, -1, 32767)
				  .addComponent(this.dugmeBack, -2, 40, -2))
				.addGroup(jPanel1Layout.createSequentialGroup()
				  .addComponent(this.dugme_6x6, -2, 50, -2)
				  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
				  .addComponent(this.dugme_9x9, -2, 50, -2)
				  .addGap(11, 11, 11)
				  .addComponent(this.jPanel3, -2, -1, -2)
				  .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
				  .addComponent(this.jPanel4, -2, -1, -2)))
			  .addGap(10, 10, 10)));
		GroupLayout layout = new GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
			.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addGroup(layout.createSequentialGroup()
			  .addContainerGap()
			  .addComponent(this.jPanel1, -2, -1, -2)
			  .addContainerGap()));
		layout.setVerticalGroup(layout
			.createParallelGroup(GroupLayout.Alignment.LEADING)
			.addGroup(layout.createSequentialGroup()
			  .addContainerGap()
			  .addComponent(this.jPanel1, -1, -1, 32767)
			  .addContainerGap()));
		pack();
		setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void dugmeBackActionPerformed(ActionEvent evt) {
        _1_Menu m = new _1_Menu();
        _3_sudoku9x9.playSound("klik.wav");
        dispose();
        m.setVisible(true);
    }

    private void dugme_9x9ActionPerformed(ActionEvent evt) {
        _3_sudoku9x9.playSound("klik.wav");
        tipSudoku = "9x9";
        kreirajIgruSaParametrima();
    }

    private void dugme_6x6ActionPerformed(ActionEvent evt) {
        _3_sudoku9x9.playSound("klik.wav");
        tipSudoku = "6x6";
        kreirajIgruSaParametrima();
    }

    private void easyRadioActionPerformed(ActionEvent evt) {
        _3_sudoku9x9.playSound("radio.wav");
    }

    private void mediumRadioActionPerformed(ActionEvent evt) {
        _3_sudoku9x9.playSound("radio.wav");
    }

    private void hardRadioActionPerformed(ActionEvent evt) {
        _3_sudoku9x9.playSound("radio.wav");
    }

    private void softwareRadioActionPerformed(ActionEvent evt) {
        _3_sudoku9x9.playSound("radio.wav");
    }

    private void databaseRadioActionPerformed(ActionEvent evt) {
        _3_sudoku9x9.playSound("radio.wav");
    }

    private void greskaRadioActionPerformed(ActionEvent evt) {
        _3_sudoku9x9.playSound("radio.wav");
    }

    private void pomocRadioActionPerformed(ActionEvent evt) {
        _3_sudoku9x9.playSound("radio.wav");
    }

    public static String getTipSudoku() {
        return tipSudoku;
    }

    public static String getNivo() {
        return nivo;
    }

    public static void setTipSudoku(String tipSudoku) {
        _2_Podesavanja.tipSudoku = tipSudoku;
    }

    public static void setNivo(String nivo) {
        _2_Podesavanja.nivo = nivo;
    }

    private void kreirajIgruSaParametrima() {
        if (tipSudoku.equals("9x9")) {
            if (this.easyRadio.isSelected() && !this.softwareRadio.isSelected()) {
                if (greskaRadio.isSelected()) {
                    greska = true;
                }
                if (pomocRadio.isSelected()) {
                    pomocIgra = true;
                }
                nivo = "laganom";
                software = false;
                _3_sudoku9x9 sudoku = new _3_sudoku9x9();
                dispose();
                sudoku.setVisible(true);
            } else if (this.mediumRadio.isSelected() && !this.softwareRadio.isSelected()) {
                if (greskaRadio.isSelected()) {
                    greska = true;
                }
                if (pomocRadio.isSelected()) {
                    pomocIgra = true;
                }
                nivo = "srednjem";
                software = false;
                _3_sudoku9x9 sudoku = new _3_sudoku9x9();
                dispose();
                sudoku.setVisible(true);
            } else if (this.hardRadio.isSelected() && !this.softwareRadio.isSelected()) {
                if (greskaRadio.isSelected()) {
                    greska = true;
                }
                if (pomocRadio.isSelected()) {
                    pomocIgra = true;
                }
                nivo = "teškom";
                software = false;
                _3_sudoku9x9 sudoku = new _3_sudoku9x9();
                dispose();
                sudoku.setVisible(true);
            } else if (this.easyRadio.isSelected() && this.softwareRadio.isSelected()) {
                if (greskaRadio.isSelected()) {
                    greska = true;
                }
                if (pomocRadio.isSelected()) {
                    pomocIgra = true;
                }
                nivo = "laganom";
                software = true;
                _3_sudoku9x9 sudoku = new _3_sudoku9x9();
                dispose();
                sudoku.setVisible(true);
            } else if (this.mediumRadio.isSelected() && this.softwareRadio.isSelected()) {
                if (greskaRadio.isSelected()) {
                    greska = true;
                }
                if (pomocRadio.isSelected()) {
                    pomocIgra = true;
                }
                nivo = "srednjem";
                software = true;
                _3_sudoku9x9 sudoku = new _3_sudoku9x9();
                dispose();
                sudoku.setVisible(true);
            } else if (this.hardRadio.isSelected() && this.softwareRadio.isSelected()) {
                if (greskaRadio.isSelected()) {
                    greska = true;
                }
                if (pomocRadio.isSelected()) {
                    pomocIgra = true;
                }
                nivo = "teškom";
                software = true;
                _3_sudoku9x9 sudoku = new _3_sudoku9x9();
                dispose();
                sudoku.setVisible(true);
            } else {
                _3_sudoku9x9.playSound("error.wav");
                int obavestenje = JOptionPane.showConfirmDialog(this, "Niste izabrali nivo ili način resavanja!", "Obaveštenje", 2);
            }
        } else if (this.easyRadio.isSelected() && !this.softwareRadio.isSelected()) {
            if (greskaRadio.isSelected()) {
                greska = true;
            }
            if (pomocRadio.isSelected()) {
                pomocIgra = true;
            }
            nivo = "laganom";
            software = false;
            _4_sudoku6x6 sudoku = new _4_sudoku6x6();
            dispose();
            sudoku.setVisible(true);
        } else if (this.mediumRadio.isSelected() && !this.softwareRadio.isSelected()) {
            if (greskaRadio.isSelected()) {
                greska = true;
            }
            if (pomocRadio.isSelected()) {
                pomocIgra = true;
            }
            nivo = "srednjem";
            software = false;
            _4_sudoku6x6 sudoku = new _4_sudoku6x6();
            dispose();
            sudoku.setVisible(true);
        } else if (this.hardRadio.isSelected() && !this.softwareRadio.isSelected()) {
            if (greskaRadio.isSelected()) {
                greska = true;
            }
            if (pomocRadio.isSelected()) {
                pomocIgra = true;
            }
            nivo = "teškom";
            software = false;
            _4_sudoku6x6 sudoku = new _4_sudoku6x6();
            dispose();
            sudoku.setVisible(true);
        } else if (this.easyRadio.isSelected() && this.softwareRadio.isSelected()) {
            if (greskaRadio.isSelected()) {
                greska = true;
            }
            if (pomocRadio.isSelected()) {
                pomocIgra = true;
            }
            nivo = "laganom";
            software = true;
            _4_sudoku6x6 sudoku = new _4_sudoku6x6();
            dispose();
            sudoku.setVisible(true);
        } else if (this.mediumRadio.isSelected() && this.softwareRadio.isSelected()) {
            if (greskaRadio.isSelected()) {
                greska = true;
            }
            if (pomocRadio.isSelected()) {
                pomocIgra = true;
            }
            nivo = "srednjem";
            software = true;
            _4_sudoku6x6 sudoku = new _4_sudoku6x6();
            dispose();
            sudoku.setVisible(true);
        } else if (this.hardRadio.isSelected() && this.softwareRadio.isSelected()) {
            if (greskaRadio.isSelected()) {
                greska = true;
            }
            if (pomocRadio.isSelected()) {
                pomocIgra = true;
            }
            nivo = "teškom";
            software = true;
            _4_sudoku6x6 sudoku = new _4_sudoku6x6();
            dispose();
            sudoku.setVisible(true);
        } else {
            _3_sudoku9x9.playSound("error.wav");
            int i = JOptionPane.showConfirmDialog(this, "Niste izabrali nivo ili način rešavanja!", "Obaveštenje", 2);
        }
    }

    private void setPozadina() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/zavrsnirad/slike/ikonica.png")));
    }

    private void podesiJezik() {
        if (_1_Menu.jezik) {
            this.dugmeBack.setText("Nazad");
            this.easyRadio.setText("Laki");
            this.mediumRadio.setText("Srednji");
            this.hardRadio.setText("Teški");
            greskaRadio.setText("Ograničenje grešaka");
            this.softwareRadio.setText("Slučajna");
            this.softwareRadio.setToolTipText("Generiše matricu ukoliko je štikliran.");
            pomocRadio.setText("Isključi pomoć");
            setTitle("Podešavanja");
            this.jPanel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Nivo", 2, 0, new Font("Courier New", 0, 12)));
            this.jPanel3.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Matrica", 2, 0, new Font("Courier New", 0, 12)));
        } else {
            this.dugmeBack.setText("Back");
            this.easyRadio.setText("Easy");
            this.mediumRadio.setText("Medium");
            this.hardRadio.setText("Hard");
            greskaRadio.setText("Error limiter");
            this.softwareRadio.setText("Random");
            this.softwareRadio.setToolTipText("Generates a matrix if checked.");
            pomocRadio.setText("Disable help");
            setTitle("Settings");
            this.jPanel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Level", 2, 0, new Font("Courier New", 0, 12)));
            this.jPanel3.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Matrix", 2, 0, new Font("Courier New", 0, 12)));
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(_2_Podesavanja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(_2_Podesavanja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(_2_Podesavanja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(_2_Podesavanja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new _2_Podesavanja().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
