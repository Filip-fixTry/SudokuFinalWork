package zavrsnirad;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.reflect.TypeToken;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.LayoutStyle;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Filip Božović
 */
public class _6_najboljiIgrac extends javax.swing.JFrame {

    private JRadioButton _6x6RadioDugme;
    private JRadioButton _9x9RadioDugme;
    private JRadioButton easyRadioDugme;
    private JRadioButton hardRadioDugme;
    private JTextArea infoTextArea;
    private JPanel jPanel1;
    private JScrollPane jScrollPane1;
    private JRadioButton mediumRadioDugme;
    private JLabel najboljiIgracLabel;
    private JButton nazadDugme;
    private ButtonGroup nivoButtonGroup;
    private JButton resetDugme;
    private ButtonGroup tipSudokuGroup;

    /**
     * Creates new form _6_najboljiIgrac
     */
    public _6_najboljiIgrac() {
        initComponents();
        setPozadina();
        podesiJezik();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        this.nivoButtonGroup = new ButtonGroup();
		 this.tipSudokuGroup = new ButtonGroup();
		 this.jPanel1 = new JPanel();
		 this.najboljiIgracLabel = new JLabel();
		 this.easyRadioDugme = new JRadioButton();
		 this.mediumRadioDugme = new JRadioButton();
		 this.hardRadioDugme = new JRadioButton();
		 this.jScrollPane1 = new JScrollPane();
		 this.infoTextArea = new JTextArea();
		 this._6x6RadioDugme = new JRadioButton();
		 this._9x9RadioDugme = new JRadioButton();
		 this.resetDugme = new JButton();
		 this.nazadDugme = new JButton();
		 setDefaultCloseOperation(3);
		 setTitle("Igrači");
		 setResizable(false);
		 this.najboljiIgracLabel.setFont(_3_sudoku9x9.fontIgre1);
		 this.najboljiIgracLabel.setHorizontalAlignment(0);
		 this.najboljiIgracLabel.setText("Spisak najboljih igrača");
		 this.nivoButtonGroup.add(this.easyRadioDugme);
		 this.easyRadioDugme.setFont(new Font("Courier New", 0, 18));
		 this.easyRadioDugme.setText("Easy");
		 this.easyRadioDugme.setFocusable(false);
		 this.easyRadioDugme.addActionListener(new ActionListener() {
			   public void actionPerformed(ActionEvent evt) {
				 _6_najboljiIgrac.this.easyRadioDugmeActionPerformed(evt);
			   }
			 });
		 this.nivoButtonGroup.add(this.mediumRadioDugme);
		 this.mediumRadioDugme.setFont(new Font("Courier New", 0, 18));
		 this.mediumRadioDugme.setText("Medium");
		 this.mediumRadioDugme.setFocusable(false);
		 this.mediumRadioDugme.addActionListener(new ActionListener() {
			   public void actionPerformed(ActionEvent evt) {
				 _6_najboljiIgrac.this.mediumRadioDugmeActionPerformed(evt);
			   }
			 });
		 this.nivoButtonGroup.add(this.hardRadioDugme);
		 this.hardRadioDugme.setFont(new Font("Courier New", 0, 18));
		 this.hardRadioDugme.setText("Hard");
		 this.hardRadioDugme.setFocusable(false);
		 this.hardRadioDugme.addActionListener(new ActionListener() {
			   public void actionPerformed(ActionEvent evt) {
				 _6_najboljiIgrac.this.hardRadioDugmeActionPerformed(evt);
			   }
			 });
		 this.jScrollPane1.setHorizontalScrollBarPolicy(31);
		 this.jScrollPane1.setViewportBorder(BorderFactory.createBevelBorder(0));
		 this.jScrollPane1.setCursor(new Cursor(0));
		 this.jScrollPane1.setFocusable(false);
		 this.infoTextArea.setEditable(false);
		 this.infoTextArea.setColumns(20);
		 this.infoTextArea.setFont(new Font("Courier New", 0, 14));
		 this.infoTextArea.setLineWrap(true);
		 this.infoTextArea.setRows(5);
		 this.infoTextArea.setFocusable(false);
		 this.infoTextArea.setSelectedTextColor(new Color(0, 0, 0));
		 this.infoTextArea.setSelectionColor(new Color(255, 255, 255));
		 this.jScrollPane1.setViewportView(this.infoTextArea);
		 this.tipSudokuGroup.add(this._6x6RadioDugme);
		 this._6x6RadioDugme.setFont(new Font("Courier New", 0, 16));
		 this._6x6RadioDugme.setText("6x6");
		 this._6x6RadioDugme.setFocusable(false);
		 this._6x6RadioDugme.addActionListener(new ActionListener() {
			   public void actionPerformed(ActionEvent evt) {
				 _6_najboljiIgrac.this._6x6RadioDugmeActionPerformed(evt);
			   }
			 });
		 this.tipSudokuGroup.add(this._9x9RadioDugme);
		 this._9x9RadioDugme.setFont(new Font("Courier New", 0, 16));
		 this._9x9RadioDugme.setSelected(true);
		 this._9x9RadioDugme.setText("9x9");
		 this._9x9RadioDugme.setFocusable(false);
		 this._9x9RadioDugme.addActionListener(new ActionListener() {
			   public void actionPerformed(ActionEvent evt) {
				 _6_najboljiIgrac.this._9x9RadioDugmeActionPerformed(evt);
			   }
			 });
		 this.resetDugme.setFont(_3_sudoku9x9.fontDugme);
		 this.resetDugme.setText("Reset");
		 this.resetDugme.setFocusable(false);
		 this.resetDugme.addActionListener(new ActionListener() {
			   public void actionPerformed(ActionEvent evt) {
				 _6_najboljiIgrac.this.resetDugmeActionPerformed(evt);
			   }
			 });
		 this.nazadDugme.setFont(_3_sudoku9x9.fontDugme);
		 this.nazadDugme.setText("Nazad");
		 this.nazadDugme.setFocusable(false);
		 this.nazadDugme.addActionListener(new ActionListener() {
			   public void actionPerformed(ActionEvent evt) {
				 _6_najboljiIgrac.this.nazadDugmeActionPerformed(evt);
			   }
			 });
		 GroupLayout jPanel1Layout = new GroupLayout(this.jPanel1);
		 this.jPanel1.setLayout(jPanel1Layout);
		 jPanel1Layout.setHorizontalGroup(jPanel1Layout
			 .createParallelGroup(GroupLayout.Alignment.LEADING)
			 .addGroup(jPanel1Layout.createSequentialGroup()
			   .addGap(45, 45, 45)
			   .addComponent(this.easyRadioDugme)
			   .addGap(64, 64, 64)
			   .addComponent(this.mediumRadioDugme)
			   .addGap(63, 63, 63)
			   .addComponent(this.hardRadioDugme)
			   .addContainerGap(-1, 32767))
			 .addGroup(jPanel1Layout.createSequentialGroup()
			   .addContainerGap()
			   .addComponent(this.jScrollPane1)
			   .addContainerGap())
			 .addGroup(jPanel1Layout.createSequentialGroup()
			   .addContainerGap()
			   .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				 .addGroup(jPanel1Layout.createSequentialGroup()
				   .addComponent(this.najboljiIgracLabel, -2, 363, -2)
				   .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
				   .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
					 .addComponent(this._6x6RadioDugme, -1, -1, 32767)
					 .addComponent(this._9x9RadioDugme))
				   .addGap(2, 2, 2))
				 .addGroup(jPanel1Layout.createSequentialGroup()
				   .addGap(0, 0, 32767)
				   .addComponent(this.resetDugme, -2, 100, -2)
				   .addGap(93, 93, 93)
				   .addComponent(this.nazadDugme)))
			   .addContainerGap()));
		 jPanel1Layout.setVerticalGroup(jPanel1Layout
			 .createParallelGroup(GroupLayout.Alignment.LEADING)
			 .addGroup(jPanel1Layout.createSequentialGroup()
			   .addGap(9, 9, 9)
			   .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
				 .addComponent(this.najboljiIgracLabel)
				 .addGroup(jPanel1Layout.createSequentialGroup()
				   .addComponent(this._6x6RadioDugme)
				   .addGap(2, 2, 2)
				   .addComponent(this._9x9RadioDugme)))
			   .addGap(18, 18, 18)
			   .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
				 .addComponent(this.easyRadioDugme)
				 .addComponent(this.mediumRadioDugme)
				 .addComponent(this.hardRadioDugme))
			   .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
			   .addComponent(this.jScrollPane1, -1, 152, 32767)
			   .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
			   .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
				 .addComponent(this.resetDugme)
				 .addComponent(this.nazadDugme))));
		 GroupLayout layout = new GroupLayout(getContentPane());
		 getContentPane().setLayout(layout);
		 layout.setHorizontalGroup(layout
			 .createParallelGroup(GroupLayout.Alignment.LEADING)
			 .addGroup(layout.createSequentialGroup()
			   .addContainerGap()
			   .addComponent(this.jPanel1, -1, -1, 32767)
			   .addContainerGap()));
		 layout.setVerticalGroup(layout
			 .createParallelGroup(GroupLayout.Alignment.LEADING)
			 .addGroup(layout.createSequentialGroup()
			   .addContainerGap()
			   .addComponent(this.jPanel1, -1, -1, 32767)
			   .addContainerGap()));
		 pack();
		 setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void easyRadioDugmeActionPerformed(ActionEvent evt) {
        ispisiIgrace();
    }

    private void mediumRadioDugmeActionPerformed(ActionEvent evt) {
        ispisiIgrace();
    }

    private void hardRadioDugmeActionPerformed(ActionEvent evt) {
        ispisiIgrace();
    }

    private void _6x6RadioDugmeActionPerformed(ActionEvent evt) {
        ispisiIgrace();
    }

    private void _9x9RadioDugmeActionPerformed(ActionEvent evt) {
        ispisiIgrace();
    }

    private void resetDugmeActionPerformed(ActionEvent evt) {
        _3_sudoku9x9.playSound("klik.wav");
        restartujIgrace();
    }

    private void nazadDugmeActionPerformed(ActionEvent evt) {
        _1_Menu m = new _1_Menu();
        _3_sudoku9x9.playSound("klik.wav");
        dispose();
        m.setVisible(true);
    }

    private void ispisiIgrace() {
        _3_sudoku9x9.playSound("radio.wav");
        Gson gson = (new GsonBuilder()).setPrettyPrinting().create();
        String datoteka = _5_cestitamo.class.getResource("najboljiIgrac.json").getPath();
        System.out.println(datoteka);
        datoteka = datoteka.replaceFirst("file:/", "");
        datoteka = datoteka.replace("/", "\\");
        datoteka = datoteka.replace("%20", " ");
        if (datoteka.startsWith("jar:")) {
            datoteka = datoteka.replaceFirst("jar:", "");
        }
        datoteka = datoteka.replace("ZavrsniRad.jar!\\zavrsnirad\\najboljiIgrac.json", "zavrsnirad\\najboljiIgrac.json");
        System.out.println(datoteka);
        File nfajl = new File(datoteka);
        if (!nfajl.exists()) {
            try {
                String tmpdat = datoteka.replace("najboljiIgrac.json", "");
                (new File(tmpdat)).mkdir();
                nfajl.createNewFile();
                System.out.println("Napravljen json fajl.");
            } catch (IOException ex) {
                Logger.getLogger(_6_najboljiIgrac.class.getName()).log(Level.SEVERE, (String) null, ex);
            }
        }
        ArrayList<HajSkor> igraci = (ArrayList<HajSkor>) gson.fromJson(FileRWrite.read(datoteka), (new TypeToken<ArrayList<HajSkor>>() {

        }).getType());
        ArrayList<HajSkor> easy9x9Igraci = new ArrayList<>();
        ArrayList<HajSkor> easy6x6Igraci = new ArrayList<>();
        ArrayList<HajSkor> medium9x9Igraci = new ArrayList<>();
        ArrayList<HajSkor> medium6x6Igraci = new ArrayList<>();
        ArrayList<HajSkor> hard9x9Igraci = new ArrayList<>();
        ArrayList<HajSkor> hard6x6Igraci = new ArrayList<>();
        if (igraci != null) {
            igraci.sort(Comparator.comparing(HajSkor::getVreme));
        }
        if (igraci != null) {
            for (HajSkor igraci1 : igraci) {
                if (igraci1.getNivo().equals("laganom") && igraci1.getTipIgre().equals("9x9")) {
                    easy9x9Igraci.add(igraci1);
                    continue;
                }
                if (igraci1.getNivo().equals("laganom") && igraci1.getTipIgre().equals("6x6")) {
                    easy6x6Igraci.add(igraci1);
                    continue;
                }
                if (igraci1.getNivo().equals("srednjem") && igraci1.getTipIgre().equals("9x9")) {
                    medium9x9Igraci.add(igraci1);
                    continue;
                }
                if (igraci1.getNivo().equals("srednjem") && igraci1.getTipIgre().equals("6x6")) {
                    medium6x6Igraci.add(igraci1);
                    continue;
                }
                if (igraci1.getNivo().equals("teškom") && igraci1.getTipIgre().equals("9x9")) {
                    hard9x9Igraci.add(igraci1);
                    continue;
                }
                if (igraci1.getNivo().equals("teškom") && igraci1.getTipIgre().equals("6x6")) {
                    hard6x6Igraci.add(igraci1);
                }
            }
        }
        if (this.easyRadioDugme.isSelected() && this._9x9RadioDugme.isSelected()) {
            this.infoTextArea.setText("");
            for (int i = 0; i < easy9x9Igraci.size(); i++) {
                if (i >= 9) {
                    this.infoTextArea.append((i + 1) + ". " + String.format("%-37s", new Object[]{((HajSkor) easy9x9Igraci.get(i)).getNadimak()}) + String.format("%7s", new Object[]{((HajSkor) easy9x9Igraci.get(i)).getVreme()}) + "\n");
                } else {
                    this.infoTextArea.append((i + 1) + ". " + String.format("%-38s", new Object[]{((HajSkor) easy9x9Igraci.get(i)).getNadimak()}) + String.format("%7s", new Object[]{((HajSkor) easy9x9Igraci.get(i)).getVreme()}) + "\n");
                }
            }
            this.infoTextArea.select(0, 1);
        } else if (this.mediumRadioDugme.isSelected() && this._9x9RadioDugme.isSelected()) {
            this.infoTextArea.setText("");
            for (int i = 0; i < medium9x9Igraci.size(); i++) {
                if (i >= 9) {
                    this.infoTextArea.append((i + 1) + ". " + String.format("%-37s", new Object[]{((HajSkor) medium9x9Igraci.get(i)).getNadimak()}) + String.format("%7s", new Object[]{((HajSkor) medium9x9Igraci.get(i)).getVreme()}) + "\n");
                } else {
                    this.infoTextArea.append((i + 1) + ". " + String.format("%-38s", new Object[]{((HajSkor) medium9x9Igraci.get(i)).getNadimak()}) + String.format("%7s", new Object[]{((HajSkor) medium9x9Igraci.get(i)).getVreme()}) + "\n");
                }
            }
            this.infoTextArea.select(0, 1);
        } else if (this.hardRadioDugme.isSelected() && this._9x9RadioDugme.isSelected()) {
            this.infoTextArea.setText("");
            for (int i = 0; i < hard9x9Igraci.size(); i++) {
                if (i >= 9) {
                    this.infoTextArea.append((i + 1) + ". " + String.format("%-37s", new Object[]{((HajSkor) hard9x9Igraci.get(i)).getNadimak()}) + String.format("%7s", new Object[]{((HajSkor) hard9x9Igraci.get(i)).getVreme()}) + "\n");
                } else {
                    this.infoTextArea.append((i + 1) + ". " + String.format("%-38s", new Object[]{((HajSkor) hard9x9Igraci.get(i)).getNadimak()}) + String.format("%7s", new Object[]{((HajSkor) hard9x9Igraci.get(i)).getVreme()}) + "\n");
                }
            }
            this.infoTextArea.select(0, 1);
        } else if (this.easyRadioDugme.isSelected() && this._6x6RadioDugme.isSelected()) {
            this.infoTextArea.setText("");
            for (int i = 0; i < easy6x6Igraci.size(); i++) {
                if (i >= 9) {
                    this.infoTextArea.append((i + 1) + ". " + String.format("%-37s", new Object[]{((HajSkor) easy6x6Igraci.get(i)).getNadimak()}) + String.format("%7s", new Object[]{((HajSkor) easy6x6Igraci.get(i)).getVreme()}) + "\n");
                } else {
                    this.infoTextArea.append((i + 1) + ". " + String.format("%-38s", new Object[]{((HajSkor) easy6x6Igraci.get(i)).getNadimak()}) + String.format("%7s", new Object[]{((HajSkor) easy6x6Igraci.get(i)).getVreme()}) + "\n");
                }
            }
            this.infoTextArea.select(0, 1);
        } else if (this.mediumRadioDugme.isSelected() && this._6x6RadioDugme.isSelected()) {
            this.infoTextArea.setText("");
            for (int i = 0; i < medium6x6Igraci.size(); i++) {
                if (i >= 9) {
                    this.infoTextArea.append((i + 1) + ". " + String.format("%-37s", new Object[]{((HajSkor) medium6x6Igraci.get(i)).getNadimak()}) + String.format("%7s", new Object[]{((HajSkor) medium6x6Igraci.get(i)).getVreme()}) + "\n");
                } else {
                    this.infoTextArea.append((i + 1) + ". " + String.format("%-38s", new Object[]{((HajSkor) medium6x6Igraci.get(i)).getNadimak()}) + String.format("%7s", new Object[]{((HajSkor) medium6x6Igraci.get(i)).getVreme()}) + "\n");
                }
            }
            this.infoTextArea.select(0, 1);
        } else if (this.hardRadioDugme.isSelected() && this._6x6RadioDugme.isSelected()) {
            this.infoTextArea.setText("");
            for (int i = 0; i < hard6x6Igraci.size(); i++) {
                if (i >= 9) {
                    this.infoTextArea.append((i + 1) + ". " + String.format("%-37s", new Object[]{((HajSkor) hard6x6Igraci.get(i)).getNadimak()}) + String.format("%7s", new Object[]{((HajSkor) hard6x6Igraci.get(i)).getVreme()}) + "\n");
                } else {
                    this.infoTextArea.append((i + 1) + ". " + String.format("%-38s", new Object[]{((HajSkor) hard6x6Igraci.get(i)).getNadimak()}) + String.format("%7s", new Object[]{((HajSkor) hard6x6Igraci.get(i)).getVreme()}) + "\n");
                }
            }
            this.infoTextArea.select(0, 1);
        }
    }

    private void restartujIgrace() {
        int odg;
        if (_1_Menu.jezik) {
            odg = JOptionPane.showConfirmDialog(this, "Da li želite da restartujete bazu najboljih igrača?", "Izaberite opciju", 0);
        } else {
            odg = JOptionPane.showConfirmDialog(this, "Do you want to restart the list of top players?", "Select an option", 0);
        }
        if (odg == 0) {
            String datoteka = _5_cestitamo.class.getResource("najboljiIgrac.json").getPath();
            datoteka = datoteka.replaceFirst("file:/", "");
            datoteka = datoteka.replace("/", "\\");
            datoteka = datoteka.replace("%20", " ");
            if (datoteka.startsWith("jar:")) {
                datoteka = datoteka.replaceFirst("jar:", "");
            }
            datoteka = datoteka.replace("ZavrsniRad.jar!\\zavrsnirad\\najboljiIgrac.json", "zavrsnirad\\najboljiIgrac.json");
            File nfajl = new File(datoteka);
            if (!nfajl.exists()) {
                try {
                    String tmpdat = datoteka.replace("najboljiIgrac.json", "");
                    (new File(tmpdat)).mkdir();
                    nfajl.createNewFile();
                    System.out.println("Napravljen json fajl.");
                } catch (IOException ex) {
                    Logger.getLogger(_6_najboljiIgrac.class.getName()).log(Level.SEVERE, (String) null, ex);
                }
            }
            try {
                PrintWriter wr = new PrintWriter(datoteka);
                wr.close();
                ispisiIgrace();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(_6_najboljiIgrac.class.getName()).log(Level.SEVERE, (String) null, ex);
            }
        }
    }

    private void setPozadina() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/zavrsnirad/slike/ikonica.png")));
    }

    private void podesiJezik() {
        if (_1_Menu.jezik) {
            this.najboljiIgracLabel.setText("Spisak najboljih igrača");
            this.easyRadioDugme.setText("Lagan");
            this.mediumRadioDugme.setText("Srednji");
            this.hardRadioDugme.setText("Težak");
            this.nazadDugme.setText("Nazad");
            setTitle("Igrači");
        } else {
            this.najboljiIgracLabel.setText("List of the best players");
            this.easyRadioDugme.setText("Easy");
            this.mediumRadioDugme.setText("Medium");
            this.hardRadioDugme.setText("Hard");
            this.nazadDugme.setText("Back");
            setTitle("Players");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(_6_najboljiIgrac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(_6_najboljiIgrac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(_6_najboljiIgrac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(_6_najboljiIgrac.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new _6_najboljiIgrac().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
